version: "3.7"

services:
  application:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_server_arch}:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"
    command: ["-Xmx${_Values_resources_requests_memory}"]

    healthcheck:
      test: "curl -f http://localhost:${_Values_service_port}/actuator/health || exit 1"
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #web
      - TZ=Europe/Berlin
      - quarkus.http.port=${_Values_service_port}
      - quarkus.http.io-threads=20
      #security
      - security.authentication.enabled=false
      - security.encryption.key=203fef90-aead-45ca-830e-ca878bb4e987 #this needs to be changed during first deployment to a unique value
      #persistence
      - quarkus.datasource.db-kind=postgresql
      - quarkus.datasource.jdbc.url=jdbc:postgresql://${_Values_root_name}-postgres:5432/persondb
      - quarkus.datasource.username=person-service
      - quarkus.datasource.password=person-service
      - quarkus.datasource.jdbc.max-size=10
      - database.provisioning.goals=-import-demo-data
      #adapter
      - adapter.calleeservice.url=http://host.docker.internal:50900
      - adapter.calleeservice.user=YWRtaW4=
      - adapter.calleeservice.password=YWRtaW4=
      - adapter.timeout=10000
      - adapter.failureRate=0.5
      - adapter.openDuration=30000
      #log levels
      - quarkus.log.level=INFO
      - quarkus.log.category."org.goafabric".level=INFO
      - quarkus.log.category."org.flywaydb.core".level=INFO
      - quarkus.log.category."org.hibernate".level=INFO
      #log file settings
      - quarkus.log.file.enable=true
      - quarkus.log.file.rotation.max-file-size=10M
      - quarkus.log.file.path=/usr/share/logs/application.log
      - quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n%throwable

    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: ${_Values_root_name}-postgres
    image: postgres:14.5
    restart: 'no'
    ports:
      - 50810:5432
    environment:
      - TZ=Europe/Berlin
      - POSTGRES_USER=person-service
      - POSTGRES_PASSWORD=person-service
      - POSTGRES_DB=persondb
    command: postgres -c 'shared_buffers=64MB' -c 'max_connections=30' -c 'shared_preload_libraries=pg_stat_statements'
    healthcheck:
      test: "sh -c pg_isready"
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
#      - ../config/postgres/initdb/00_pg_statements.sql:/docker-entrypoint-initdb.d/00_pg_statements.sql
    networks:
      - ${_Values_root_name}-net

volumes:
    tmp:
    applogs:
    pgdata:

networks:
  person-service-net:
    driver: bridge